<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lwg.photo.show.dao.BeautyPhotoMapper">
	<resultMap id="BaseResultMap" type="com.lwg.photo.show.model.domain.BeautyPhoto">
		<id column="uuid" property="uuid" jdbcType="VARCHAR" />
		<result column="imgId" property="imgid" jdbcType="VARCHAR" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="category" property="category" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="collectTime" property="collecttime" jdbcType="TIMESTAMP" />
		<result column="collectUrl" property="collecturl" jdbcType="VARCHAR" />
		<result column="location" property="location" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		uuid, imgId, title, category, remark, collectTime,
		collectUrl, location
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.lwg.photo.show.model.domain.BeautyPhotoExample">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from beauty_photo
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from beauty_photo
		where uuid = #{uuid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		beauty_photo
		where uuid = #{uuid,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.lwg.photo.show.model.domain.BeautyPhoto">
		insert into beauty_photo
		(uuid, imgId, title,
		category, remark, collectTime,
		collectUrl,
		location)
		values (#{uuid,jdbcType=VARCHAR}, #{imgid,jdbcType=VARCHAR},
		#{title,jdbcType=VARCHAR},
		#{category,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR}, #{collecttime,jdbcType=TIMESTAMP},
		#{collecturl,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.lwg.photo.show.model.domain.BeautyPhoto">
		insert into beauty_photo
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="uuid != null">
				uuid,
			</if>
			<if test="imgid != null">
				imgId,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="category != null">
				category,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="collecttime != null">
				collectTime,
			</if>
			<if test="collecturl != null">
				collectUrl,
			</if>
			<if test="location != null">
				location,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="uuid != null">
				#{uuid,jdbcType=VARCHAR},
			</if>
			<if test="imgid != null">
				#{imgid,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="category != null">
				#{category,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="collecttime != null">
				#{collecttime,jdbcType=TIMESTAMP},
			</if>
			<if test="collecturl != null">
				#{collecturl,jdbcType=VARCHAR},
			</if>
			<if test="location != null">
				#{location,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="selectAll" resultType="BeautyPhoto">
		select * from beauty_photo
		ORDER BY title, imgId
	</select>
	<select id="selectByTitle" resultType="BeautyPhoto"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from beauty_photo
		where title = #{title,jdbcType=VARCHAR}
	</select>

	<select id="selectAllTitles" resultType="java.lang.String">
		select
		distinct(title)
		from
		beauty_photo
		ORDER BY title
	</select>

	<select id="countByExample" parameterType="com.lwg.photo.show.model.domain.BeautyPhotoExample"
		resultType="java.lang.Integer">
		select count(*) from beauty_photo
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="com.lwg.photo.show.model.domain.BeautyPhoto">
		update beauty_photo
		<set>
			<if test="imgid != null">
				imgId = #{imgid,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="category != null">
				category = #{category,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="collecttime != null">
				collectTime = #{collecttime,jdbcType=TIMESTAMP},
			</if>
			<if test="collecturl != null">
				collectUrl = #{collecturl,jdbcType=VARCHAR},
			</if>
			<if test="location != null">
				location = #{location,jdbcType=VARCHAR},
			</if>
		</set>
		where uuid = #{uuid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.lwg.photo.show.model.domain.BeautyPhoto">
		update
		beauty_photo
		set imgId = #{imgid,jdbcType=VARCHAR},
		title =
		#{title,jdbcType=VARCHAR},
		category = #{category,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		collectTime =
		#{collecttime,jdbcType=TIMESTAMP},
		collectUrl =
		#{collecturl,jdbcType=VARCHAR},
		location = #{location,jdbcType=VARCHAR}
		where uuid = #{uuid,jdbcType=VARCHAR}
	</update>
</mapper>